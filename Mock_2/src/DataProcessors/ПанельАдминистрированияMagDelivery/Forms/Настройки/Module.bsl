
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкаПодключения = ЭмуляцияMagDelivery.НастройкаПодключенияКБазеТестирования();
	
	Если НастройкаПодключения <> Неопределено Тогда
		
		Если НастройкаПодключения.Свойство("Адрес") Тогда
			Адрес = НастройкаПодключения.Адрес;
		КонецЕсли;
		
		Если НастройкаПодключения.Свойство("Порт") Тогда
			Порт = НастройкаПодключения.Порт;
		КонецЕсли;
		
		Если НастройкаПодключения.Свойство("Порт") Тогда
			Порт = НастройкаПодключения.Порт;
		КонецЕсли;
		
		Если НастройкаПодключения.Свойство("Таймаут") Тогда
			Таймаут = НастройкаПодключения.Таймаут;
		КонецЕсли;
		
		Если НастройкаПодключения.Свойство("Логин") Тогда
			Логин = НастройкаПодключения.Логин;
		КонецЕсли;
		
		Если НастройкаПодключения.Свойство("Пароль") Тогда
			Пароль = НастройкаПодключения.Пароль;
		КонецЕсли;
		
		Если НастройкаПодключения.Свойство("ИмяИнформационнойБазы") Тогда
			ИмяИнформационнойБазы = НастройкаПодключения.ИмяИнформационнойБазы;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресПриИзменении(Элемент)
	ПриИзмененииНастройкиКлиент(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПортПриИзменении(Элемент)
	ПриИзмененииНастройкиКлиент(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ТаймаутПриИзменении(Элемент)
	ПриИзмененииНастройкиКлиент(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЛогинПриИзменении(Элемент)
	ПриИзмененииНастройкиКлиент(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	ПриИзмененииНастройкиКлиент(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИмяИнформационнойБазыПриИзменении(Элемент)
	ПриИзмененииНастройкиКлиент(Элемент);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииНастройкиКлиент(Элемент)
	Результат = ПриИзмененииНастройкиСервер(Элемент.Имя);
КонецПроцедуры

&НаСервере
Функция ПриИзмененииНастройкиСервер(ИмяЭлемента)
	
	Результат = Новый Структура;
	
	НачатьТранзакцию();
	Попытка

		НастройкиОбмена = ЭмуляцияMagDelivery.ИнициализироватьПараметрыПодключенияКБазеТестирования();
		НастройкиОбмена.Адрес = Адрес;
		НастройкиОбмена.Порт = Порт;
		НастройкиОбмена.Таймаут = Таймаут;
		НастройкиОбмена.Логин = Логин;
		НастройкиОбмена.Пароль = Пароль;
		НастройкиОбмена.ИмяИнформационнойБазы = ИмяИнформационнойБазы;
		
		Константы.НастройкиОбменаMagDelivery.Установить(Новый ХранилищеЗначения(НастройкиОбмена));
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ИнфрмацияОшибки = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Выполнение операции'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнфрмацияОшибки));
		
		ВызватьИсключение;
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти